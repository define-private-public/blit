Blit File Format Version 1:
---------------------------

Blit will use it own file format for the animations.  There is no extension for
the current version (1).  Everything will be saved into a directroy that is the
name of the project.  Inside the folder, there will be a bunch of 32-Bit PNGs
and one XML file.  The PNGs are the images for the Cels.  The XML file
contains all of the informaton regarding the animation sequence.



The Cel class will have the following structure:
  - Id, a UUID (4) in the <cel> tag as an attribute
  - X and Y locations (floats)
  - Width and Height (cache of the image's resolution, in pixels).

  The filename of the image for that Cel will be the Id with a .png extension. 
  A PNG files should be 32-Bit.  The application will worry about loading them
  in as premultiplied.

  Example:
  --------
  <cel uuid="de305d54-75b4-431b-adb2-eb6b9e546013">
      <x>0.3</x>
      <y>5</y>
      <width>43</width>
      <height>50</height>
  </cel>
  --------



The Frame class has the following structure:
  - Number, a postive integer representative of it's frame number (in the
	<frame> tag as an attribute)
  - Hold, a positive integer for how long to hold the frame for
  - NumCels, a cached value of how many cels there are
  - Name, a string to identify the frame with, can be an empty string
  - List of Cels, they should be in order:
    -- Cel at layer 0 (topmost) should be at the front
    -- Cel at layer N (bottommost) should be at the end

  Example:
  --------
  <frame number="45">
    <name>1-7</name>
    <hold>2</hold>
    <num_cels>5</num_cels>
    <cel uuid="...">
      ...
    </cel>
	... [More Cels] ...
    <cel uuid="...">
      ...
    </cel>
  </frame>
  --------



The XSheet class has the following structure:
  - FPS, a positive integer for the Frames Per Second this animation should be
    shown at
  - SeqLength, A Cache of how long the sequence isa
  - Frames, An ordered list of the Frame objects

  Example:
  --------
  <xsheet>
    <fps>12</fps>
    <seq_length>36</seq_length>
    <num_frames>18</num_frames>
    <frame number="...">
      ...
    </frame>
    ... [More Frames] ...
    <frame number="...">
      ...
    </frame>
  </xsheet>
  --------



The Animation class is the sort of "base structure" for the file format.  It
contains the following fields:
  - FFVersion, A positive integer that specifys which version of the fileformat
    that is being worked with (as an attribute in the <animation> tag)
  - Name, a string (can be empty) that gives a name to the Animation project
  - Width & Height, postive integers that represent the dimension of the
    Animation
  - Created & Updated, string fields (generated using Python's time.ctime() 
    function.
  - XSheet, the structure that is described above

  Example:
  --------
  <animation version="1">
    <name>Magical Unicorn Adventure!</name>
    <created format="unix_timestamp">1420309397</created>
    <updated format="unix_timestamp">1420327082</updated>
    <width>800</width>
    <height>480</height>
    <xsheet>
      ...
    </xsheet>
  </animation>
  --------



--------------------------------------------------------------------------------

A file called "palette.xml" contains the color palette of the working Blit File.
It is very simple.  There is a root node called <palette> and an ordered list of
<color> tags, where the color value in stored in the AARRGGBB format (upper case
hex strings).  The version number should be the same as the current Blit File
Format number.  See below for an example.

  Example:
  --------
  <palette version="1">
    <color value="FF000000" />
	<color value="FFFFFFFF" />
    <color value="FFFF0000" />
	<color value="FF00FF00" />
	<color value="FF0000FF" />
	<color value="FF00FFFF" />
	<color value="FFFF00FF" />
	<color value="FFFFFF00" />
  </palette>
  --------



--------------------------------------------------------------------------------

If you are confused on how this file format works, it would be best to consult
one of the samples in the `samples/` directory of this project.


